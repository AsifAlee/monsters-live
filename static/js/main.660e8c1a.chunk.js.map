{"version":3,"sources":["components/card/card.component.jsx","components/card-list/cardlist.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","singleMonster","id","alt","name","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","this","filteredMonsters","filter","monster","toLowerCase","includes","fetch","then","response","json","users","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAaeA,EAVF,SAACC,GAAD,OACV,sBAAKC,UAAU,iBAAf,UACG,qBACEC,IAAG,+BAA0BF,EAAMG,cAAcC,GAA9C,aACHC,IAAI,aAEN,6BAAKL,EAAMG,cAAcG,OACzB,4BAAIN,EAAMG,cAAcG,WCMfC,EAZE,SAACP,GAEd,OADAQ,QAAQC,IAAI,mCAAoCT,EAAMU,UAC9C,qBAAKT,UAAU,YAAf,SAGAD,EAAMU,SAASC,KAAI,SAAAR,GAAa,OAC5B,cAAC,EAAD,CAA6BA,cAAeA,GAAjCA,EAAcC,UCG1BQ,G,MATG,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OAEd,uBACEb,UAAU,SACVc,KAAK,OACLF,YAAaA,EACbG,SAAUF,MC4CDG,E,kDA7Cb,aAAe,IAAD,8BACZ,gBAUFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SATtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,0CAiBd,WAAU,IAAD,EAC2BI,KAAKD,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YAClBZ,QAAQC,IAAI,YAAae,KAAKD,OAC9B,IAAME,EAAmBf,EAASgB,QAAO,SAAAC,GAAO,OAAIA,EAAQrB,KAAKsB,cAAcC,SAAST,EAAYQ,kBACpG,OACE,sBAAK3B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEY,YAAa,kBACbC,aAAcU,KAAKV,eAGrB,cAAC,EAAD,CAAUJ,SAAUe,S,+BAK1B,WAAqB,IAAD,OAClBK,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ1B,QAAQC,IAAI,eAAgByB,GAC5B,EAAKf,SAAS,CAAET,SAAUwB,IAC1B1B,QAAQC,IAAI,+B,GA3CF0B,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.660e8c1a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css'\r\n\r\nconst Card = (props) => \r\n  (<div className='card-container'>\r\n      <img\r\n        src={`https://robohash.org/${props.singleMonster.id}?set=set2`}\r\n        alt=\"Monsters\"  \r\n      />   \r\n      <h1>{props.singleMonster.name}</h1>\r\n      <p>{props.singleMonster.name}</p>\r\n  </div>)\r\n\r\nexport default Card;","import React from 'react';\r\nimport './card-list.style.css';\r\nimport Card from '../card/card.component';\r\n\r\nconst CardList = (props) => {\r\n    console.log(\"monsters passed to cardlist are:\", props.monsters);\r\n    return (<div className='card-list'>\r\n        {\r\n\r\n            props.monsters.map(singleMonster =>\r\n                <Card key={singleMonster.id} singleMonster={singleMonster} />\r\n            )\r\n        }\r\n\r\n    </div>)\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nimport './search-box.style.css';\r\n\r\n const SearchBox =({placeholder,handleChange}) =>\r\n(\r\n    <input\r\n      className='search'\r\n      type='text'\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    />\r\n)\r\nexport default SearchBox;","\nimport './App.css';\nimport React, { Component } from 'react';\nimport CardList from './components/card-list/cardlist.component';\n\nimport SearchBox from './components/search-box/search-box.component';\nclass App extends React.Component {\n\n\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\"\n    };\n\n\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n \n\n  render() {\n    const { monsters, searchField } = this.state;\n    console.log(\"state is:\", this.state);\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox\n          placeholder={'Search monsters'}\n          handleChange={this.handleChange}\n        />\n\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users => {\n        console.log(\"the json is:\", users);\n        this.setState({ monsters: users })\n        console.log(\"the update state is:\");\n      })\n  }\n\n}\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}